'use client';
import Script from "next/script";
import { useEffect, useRef } from "react";
import { motion } from "framer-motion";
import Link from "next/link";

/**
 * –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (Landing Page) —Å Neumorphism-—Å—Ç–∏–ª–µ–º
 */
export default function Home() {
  const widgetRef = useRef(null);

  useEffect(() => {
    const script = document.createElement("script");
    script.async = true;
    script.src = "https://telegram.org/js/telegram-widget.js?7";
    script.dataset.telegramLogin = "darlinxloginbot";
    script.dataset.size = "large";
    script.dataset.userpic = "false";
    script.dataset.requestAccess = "write";
    script.dataset.onauth = "onTelegramAuth(user)";
    script.dataset.authUrl = "https://time-36a7.onrender.com/dashboard";
    widgetRef.current.appendChild(script);
  }, []);

  return (
    <main className="min-h-screen flex flex-col items-center justify-center bg-primary p-4">
      <motion.div
        className="card flex flex-col items-center max-w-lg w-full mb-8"
        initial={{ opacity: 0, y: 40 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.7 }}
      >
        <h1 className="text-4xl font-bold mb-4 text-accent select-none">Time Life Tracker</h1>
        <p className="mb-4 text-lg text-text text-center">
          –¢–≤–æ–π –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π —Ç—Ä–µ–∫–µ—Ä –≤—Ä–µ–º–µ–Ω–∏, –∑–∞–¥–∞—á –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π —á–µ—Ä–µ–∑ Telegram.<br/>
          <span className="text-accent font-semibold">Neumorphism-–¥–∏–∑–∞–π–Ω</span>, –ø–ª–∞–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏, —É–¥–æ–±–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞.
        </p>
        <div className="w-full flex flex-col items-center">
          <div ref={widgetRef} id="telegram-login-widget" className="mb-2" />
          <span className="text-xs text-gray-400">–í—Ö–æ–¥ —á–µ—Ä–µ–∑ Telegram ‚Äî –±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ</span>
        </div>
      </motion.div>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ */}
      <motion.div
        className="flex gap-4 mb-8"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.3, duration: 0.5 }}
      >
        <Link href="/articles">
          <motion.button
            className="btn-neumorph"
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
          >
            üìö –°—Ç–∞—Ç—å–∏
          </motion.button>
        </Link>
      </motion.div>

      <motion.ul
        className="flex flex-wrap gap-4 justify-center"
        initial="hidden"
        animate="visible"
        variants={{ hidden: {}, visible: { transition: { staggerChildren: 0.1 } } }}
      >
        {[
          { icon: '‚è±Ô∏è', text: '–¢—Ä–µ–∫–µ—Ä –≤—Ä–µ–º–µ–Ω–∏ —Å –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º' },
          { icon: 'üìù', text: 'ToDo-–ª–∏—Å—Ç —Å –¥–µ–¥–ª–∞–π–Ω–∞–º–∏' },
          { icon: 'üòä', text: '–¢—Ä–µ–∫–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è' },
          { icon: 'üìä', text: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏' },
          { icon: 'üìÖ', text: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å' },
          { icon: 'üìö', text: '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Obsidian' },
        ].map((f, i) => (
          <motion.li
            key={i}
            className="card flex items-center gap-2 px-4 py-2 text-base"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.2 + i * 0.1, duration: 0.4 }}
          >
            <span className="text-2xl select-none">{f.icon}</span>
            <span>{f.text}</span>
          </motion.li>
        ))}
      </motion.ul>
      <Script src="/telegram-auth.js" strategy="beforeInteractive" />
    </main>
  );
}
